[33mcommit 22b4db2c675eb293d950601f2d9a69c3abcb2da3[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: JovanStefanovic87 <zbni.rs@gmail.com>
Date:   Mon Nov 25 00:00:52 2024 +0100

    prepairedToDeploy

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex a91b633..a90231e 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -39,3 +39,9 @@[m [myarn-error.log*[m
 # typescript[m
 *.tsbuildinfo[m
 next-env.d.ts[m
[32m+[m
[32m+[m[32m#db[m
[32m+[m[32m*.db[m
[32m+[m[32m*.sqlite[m
[32m+[m[32m*.sql[m
[32m+[m[32m/pgdata/[m
\ No newline at end of file[m
[1mdiff --git a/app/admin/[category_type]/page.tsx b/app/admin/[category_type]/page.tsx[m
[1mindex 458448b..c5f831d 100644[m
[1m--- a/app/admin/[category_type]/page.tsx[m
[1m+++ b/app/admin/[category_type]/page.tsx[m
[36m@@ -7,6 +7,7 @@[m [mimport {[m
 	prefixObjectTypeCategory,[m
 } from '@/app/api/prefix';[m
 import PageContainer from '@/app/components/containers/PageContainer';[m
[32m+[m[32mimport CategoriesAutoInput from '@/app/components/autoInputFromExcel/categoriesAutoInput';[m
 type CategoryType = 'kategorije-delatnosti' | 'kategorije-proizvoda' | 'kategorije-tipova-objekata';[m
 interface Props {[m
 	params: {[m
[36m@@ -40,6 +41,7 @@[m [mconst DynamicCategoriesAdminPage: FC<Props> = ({ params }) => {[m
 	return ([m
 		<PageContainer>[m
 			<CategoriesAdmin prefix={currentConfig.prefix} title={currentConfig.title} />[m
[32m+[m			[32m<CategoriesAutoInput prefix={currentConfig.prefix} title={currentConfig.title} />[m
 		</PageContainer>[m
 	);[m
 };[m
[1mdiff --git a/app/admin/page.tsx b/app/admin/page.tsx[m
[1mindex 334b213..33cd9a0 100644[m
[1m--- a/app/admin/page.tsx[m
[1m+++ b/app/admin/page.tsx[m
[36m@@ -37,7 +37,7 @@[m [mconst AdminPage = () => {[m
 			</div>[m
 		);[m
 	}[m
[31m-	console.log('session', session);[m
[32m+[m
 	return ([m
 		<PageContainer>[m
 			<header className='bg-blue-600 text-white py-4 px-6 shadow-md'>[m
[1mdiff --git a/app/api/categoriesExcel/route.ts b/app/api/categoriesExcel/route.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..865f440[m
[1m--- /dev/null[m
[1m+++ b/app/api/categoriesExcel/route.ts[m
[36m@@ -0,0 +1,147 @@[m
[32m+[m[32mimport { NextResponse } from 'next/server';[m
[32m+[m[32mimport * as xlsx from 'xlsx';[m
[32m+[m[32mimport { prisma } from '@/app/lib/prisma';[m
[32m+[m
[32m+[m[32minterface ExcelRow {[m
[32m+[m	[32mtranslation1: string;[m
[32m+[m	[32mtranslation2: string;[m
[32m+[m	[32miconName?: string;[m
[32m+[m	[32mfolderName?: string;[m
[32m+[m	[32mparentCategoryName?: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport async function POST(request: Request) {[m
[32m+[m	[32mtry {[m
[32m+[m		[32m// Primanje fajla[m
[32m+[m		[32mconst formData = await request.formData();[m
[32m+[m		[32mconst file = formData.get('file') as File;[m
[32m+[m		[32mconst prefix = formData.get('prefix') as string;[m
[32m+[m		[32mconsole.log(`Fajl ime: ${file.name}, tip: ${file.type}, veliƒçina: ${file.size}`);[m
[32m+[m		[32mif (file.size === 0) {[m
[32m+[m			[32mconsole.error('Fajl je prazan.');[m
[32m+[m			[32mreturn NextResponse.json({ error: 'File is empty' }, { status: 400 });[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif (!file) {[m
[32m+[m			[32mconsole.error('Fajl nije poslat.');[m
[32m+[m			[32mreturn NextResponse.json({ error: 'No file provided' }, { status: 400 });[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m// ƒåitanje Excel fajla[m
[32m+[m		[32mconst buffer = await file.arrayBuffer();[m
[32m+[m		[32mconst workbook = xlsx.read(buffer, { type: 'array' });[m
[32m+[m		[32mconst sheetName = workbook.SheetNames[0];[m
[32m+[m		[32mconst sheet = workbook.Sheets[sheetName];[m
[32m+[m
[32m+[m		[32m// Konvertovanje podataka u JSON[m
[32m+[m		[32mconst data: ExcelRow[] = xlsx.utils.sheet_to_json<ExcelRow>(sheet);[m
[32m+[m
[32m+[m		[32m// Procesiranje podataka[m
[32m+[m		[32mfor (const row of data) {[m
[32m+[m			[32mconst { translation1, translation2, iconName, folderName, parentCategoryName } = row;[m
[32m+[m
[32m+[m			[32mconst labelName = `${prefix}${translation1}`;[m
[32m+[m
[32m+[m			[32m// Kreiranje etikete (Label)[m
[32m+[m			[32mconst label = await prisma.label.create({[m
[32m+[m				[32mdata: {[m
[32m+[m					[32mname: labelName,[m
[32m+[m					[32mtranslations: {[m
[32m+[m						[32mcreate: [[m
[32m+[m							[32m{[m
[32m+[m								[32mlanguageId: 1,[m
[32m+[m								[32mtranslation: translation1,[m
[32m+[m							[32m},[m
[32m+[m							[32m{[m
[32m+[m								[32mlanguageId: 2,[m
[32m+[m								[32mtranslation: translation2,[m
[32m+[m							[32m},[m
[32m+[m						[32m],[m
[32m+[m					[32m},[m
[32m+[m				[32m},[m
[32m+[m			[32m});[m
[32m+[m
[32m+[m			[32m// Kreiranje ikonice[m
[32m+[m			[32mlet icon = null;[m
[32m+[m			[32mif (iconName && folderName) {[m
[32m+[m				[32micon = await prisma.icon.upsert({[m
[32m+[m					[32mwhere: {[m
[32m+[m						[32mname_folder: {[m
[32m+[m							[32mname: iconName,[m
[32m+[m							[32mfolder: folderName,[m
[32m+[m						[32m},[m
[32m+[m					[32m},[m
[32m+[m					[32mcreate: {[m
[32m+[m						[32mname: iconName,[m
[32m+[m						[32mfolder: folderName,[m
[32m+[m						[32murl: `/icons/${folderName}/${iconName}`,[m
[32m+[m					[32m},[m
[32m+[m					[32mupdate: {[m
[32m+[m						[32murl: `/icons/${folderName}/${iconName}`,[m
[32m+[m					[32m},[m
[32m+[m				[32m});[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m// Pronala≈æenje ili kreiranje roditeljske kategorije[m
[32m+[m			[32mlet parentCategory = null;[m
[32m+[m			[32mif (parentCategoryName) {[m
[32m+[m				[32mconst parentLabelName = `${prefix}${parentCategoryName}`; // Kombinacija prefix i parentCategoryName[m
[32m+[m
[32m+[m				[32mparentCategory = await prisma.category.findFirst({[m
[32m+[m					[32mwhere: { label: { name: parentLabelName } }, // Provera sa generisanim imenom[m
[32m+[m				[32m});[m
[32m+[m
[32m+[m				[32m// Automatsko kreiranje ako ne postoji[m
[32m+[m				[32mif (!parentCategory) {[m
[32m+[m					[32mconst parentLabel = await prisma.label.create({[m
[32m+[m						[32mdata: {[m
[32m+[m							[32mname: parentLabelName,[m
[32m+[m							[32mtranslations: {[m
[32m+[m								[32mcreate: [[m
[32m+[m									[32m{[m
[32m+[m										[32mlanguageId: 1,[m
[32m+[m										[32mtranslation: parentCategoryName,[m
[32m+[m									[32m},[m
[32m+[m									[32m{[m
[32m+[m										[32mlanguageId: 2,[m
[32m+[m										[32mtranslation: parentCategoryName, // Opcionalno, mo≈æete prilagoditi prevod[m
[32m+[m									[32m},[m
[32m+[m								[32m],[m
[32m+[m							[32m},[m
[32m+[m						[32m},[m
[32m+[m					[32m});[m
[32m+[m
[32m+[m					[32mparentCategory = await prisma.category.create({[m
[32m+[m						[32mdata: {[m
[32m+[m							[32mlabelId: parentLabel.id,[m
[32m+[m						[32m},[m
[32m+[m					[32m});[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m// Kreiranje nove kategorije[m
[32m+[m			[32mawait prisma.category.create({[m
[32m+[m				[32mdata: {[m
[32m+[m					[32mlabelId: label.id,[m
[32m+[m					[32miconId: icon?.id || null,[m
[32m+[m					[32mparentCategories: parentCategory[m
[32m+[m						[32m? {[m
[32m+[m								[32mcreate: [[m
[32m+[m									[32m{[m
[32m+[m										[32mchild: {[m
[32m+[m											[32mconnect: { id: parentCategory.id },[m
[32m+[m										[32m},[m
[32m+[m									[32m},[m
[32m+[m								[32m],[m
[32m+[m						[32m  }[m
[32m+[m						[32m: undefined,[m
[32m+[m				[32m},[m
[32m+[m			[32m});[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn NextResponse.json({ message: 'Data imported successfully' });[m
[32m+[m	[32m} catch (error) {[m
[32m+[m		[32mconsole.error('Error importing data:', error);[m
[32m+[m		[32mreturn NextResponse.json({ error: 'Failed to import data' }, { status: 500 });[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/auth/signin/page.tsx b/app/auth/signin/page.tsx[m
[1mindex 743b5c2..5f6c0c5 100644[m
[1m--- a/app/auth/signin/page.tsx[m
[1m+++ b/app/auth/signin/page.tsx[m
[36m@@ -6,10 +6,12 @@[m [mimport { useRouter } from 'next/navigation';[m
 import HydratationAuthInput from '@/app/components/ui/input/HydratationAuthInput';[m
 import IconInput from '@/app/components/ui/Icons/IconInput';[m
 import { FaUser, FaLock } from 'react-icons/fa';[m
[32m+[m[32mimport SubmitButton from '@/app/components/buttons/SubmitButton';[m
[32m+[m[32mimport PageContainer from '@/app/components/containers/PageContainer';[m
 [m
 const SignInPage = () => {[m
[31m-	const [email, setEmail] = useState('suinfotrg@gmail.com');[m
[31m-	const [password, setPassword] = useState('5NuEiAkC9@)/');[m
[32m+[m	[32mconst [email, setEmail] = useState('');[m
[32m+[m	[32mconst [password, setPassword] = useState('');[m
 	const [error, setError] = useState<string | null>(null);[m
 	const router = useRouter();[m
 [m
[36m@@ -23,46 +25,50 @@[m [mconst SignInPage = () => {[m
 		});[m
 [m
 		if (result?.error) {[m
[31m-			setError(result.error);[m
[32m+[m			[32msetError('Neispravno korisniƒçko ime ili lozinka');[m
 		} else if (result?.ok) {[m
 			router.push('/admin');[m
 		} else {[m
[31m-			setError('Unexpected error occurred');[m
[32m+[m			[32msetError('Do≈°lo je do neoƒçekivane gre≈°ke.');[m
 		}[m
 	};[m
 [m
 	return ([m
[31m-		<div id='signin-wrapper'>[m
[31m-			<h1>Sign In</h1>[m
[31m-			{error && <p style={{ color: 'red' }}>{error}</p>}[m
[31m-			<form onSubmit={handleSubmit}>[m
[31m-				<HydratationAuthInput placeholder='Korisniƒçko ime*' value={email} setValue={setEmail}>[m
[31m-					<IconInput icon={<FaUser />} />[m
[31m-				</HydratationAuthInput>[m
[31m-				<HydratationAuthInput[m
[31m-					placeholder='Lozinka*'[m
[31m-					value={password}[m
[31m-					type='password'[m
[31m-					setValue={setPassword}>[m
[31m-					<IconInput icon={<FaLock />} />[m
[31m-				</HydratationAuthInput>[m
[31m-				{/* <input[m
[31m-					type='email'[m
[31m-					value={email}[m
[31m-					onChange={e => setEmail(e.target.value)}[m
[31m-					placeholder='Email'[m
[31m-					required[m
[31m-				/>[m
[31m-				<input[m
[31m-					type='password'[m
[31m-					value={password}[m
[31m-					onChange={e => setPassword(e.target.value)}[m
[31m-					placeholder='Password'[m
[31m-					required[m
[31m-				/> */}[m
[31m-				<button type='submit'>Sign In</button>[m
[31m-			</form>[m
[31m-		</div>[m
[32m+[m		[32m<PageContainer>[m
[32m+[m			[32m<div className='flex justify-center'>[m
[32m+[m				[32m<div className='p-8 w-full max-w-md'>[m
[32m+[m					[32m<h1 className='text-2xl font-bold text-center mb-6'>Prijava</h1>[m
[32m+[m					[32m{error && <p className='text-red-500 text-sm text-center mb-4'>{error}</p>}[m
[32m+[m					[32m<form onSubmit={handleSubmit} className='space-y-6'>[m
[32m+[m						[32m<div>[m
[32m+[m							[32m<HydratationAuthInput placeholder='Korisniƒçko ime*' value={email} setValue={setEmail}>[m
[32m+[m								[32m<IconInput icon={<FaUser />} />[m
[32m+[m							[32m</HydratationAuthInput>[m
[32m+[m						[32m</div>[m
[32m+[m						[32m<div>[m
[32m+[m							[32m<HydratationAuthInput[m
[32m+[m								[32mplaceholder='Lozinka*'[m
[32m+[m								[32mvalue={password}[m
[32m+[m								[32mtype='password'[m
[32m+[m								[32msetValue={setPassword}>[m
[32m+[m								[32m<IconInput icon={<FaLock />} />[m
[32m+[m							[32m</HydratationAuthInput>[m
[32m+[m						[32m</div>[m
[32m+[m						[32m<div>[m
[32m+[m							[32m<SubmitButton>Prijavi se</SubmitButton>[m
[32m+[m						[32m</div>[m
[32m+[m					[32m</form>[m
[32m+[m					[32m<div className='text-sm text-center mt-4'>[m
[32m+[m						[32m<p>[m
[32m+[m							[32mZaboravljena lozinka?{' '}[m
[32m+[m							[32m<a href='/auth/reset-password' className='text-blue-600 hover:underline'>[m
[32m+[m								[32mResetuj[m
[32m+[m							[32m</a>[m
[32m+[m						[32m</p>[m
[32m+[m					[32m</div>[m
[32m+[m				[32m</div>[m
[32m+[m			[32m</div>[m
[32m+[m		[32m</PageContainer>[m
 	);[m
 };[m
 [m
[1mdiff --git a/app/components/autoInputFromExcel/categoriesAutoInput.tsx b/app/components/autoInputFromExcel/categoriesAutoInput.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..d08d0b0[m
[1m--- /dev/null[m
[1m+++ b/app/components/autoInputFromExcel/categoriesAutoInput.tsx[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32m'use client';[m
[32m+[m[32mimport { useState, FC } from 'react';[m
[32m+[m
[32m+[m[32minterface CategoriesAdminProps {[m
[32m+[m	[32mprefix: string;[m
[32m+[m	[32mtitle: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst CategoriesAutoInput: FC<CategoriesAdminProps> = ({ prefix, title }) => {[m
[32m+[m	[32mconst [file, setFile] = useState<File | null>(null);[m
[32m+[m	[32mconst [loading, setLoading] = useState(false);[m
[32m+[m	[32mconst [message, setMessage] = useState<string | null>(null);[m
[32m+[m
[32m+[m	[32mconst handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {[m
[32m+[m		[32mif (event.target.files && event.target.files[0]) {[m
[32m+[m			[32msetFile(event.target.files[0]);[m
[32m+[m		[32m}[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mconst handleFileUpload = async () => {[m
[32m+[m		[32mif (!file) {[m
[32m+[m			[32malert('Molimo izaberite fajl pre slanja.');[m
[32m+[m			[32mreturn;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32msetLoading(true);[m
[32m+[m		[32msetMessage(null);[m
[32m+[m
[32m+[m		[32mconst formData = new FormData();[m
[32m+[m		[32mformData.append('file', file);[m
[32m+[m		[32mformData.append('prefix', prefix);[m
[32m+[m
[32m+[m		[32mtry {[m
[32m+[m			[32mconst response = await fetch('/api/categoriesExcel', {[m
[32m+[m				[32mmethod: 'POST',[m
[32m+[m				[32mbody: formData,[m
[32m+[m			[32m});[m
[32m+[m			[32mconst result = await response.json();[m
[32m+[m
[32m+[m			[32mif (response.ok) {[m
[32m+[m				[32msetMessage('Podaci su uspe≈°no uneti.');[m
[32m+[m			[32m} else {[m
[32m+[m				[32msetMessage(result.error || 'Do≈°lo je do gre≈°ke prilikom unosa podataka.');[m
[32m+[m			[32m}[m
[32m+[m		[32m} catch (error) {[m
[32m+[m			[32mconsole.error('Error uploading file:', error);[m
[32m+[m			[32msetMessage('Do≈°lo je do gre≈°ke prilikom unosa podataka.');[m
[32m+[m		[32m} finally {[m
[32m+[m			[32msetLoading(false);[m
[32m+[m		[32m}[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mreturn ([m
[32m+[m		[32m<div>[m
[32m+[m			[32m<h1>{title}</h1>[m
[32m+[m			[32m<div>[m
[32m+[m				[32m<input type='file' accept='.xlsx' onChange={handleFileChange} />[m
[32m+[m				[32m<button onClick={handleFileUpload} disabled={loading}>[m
[32m+[m					[32m{loading ? 'Uƒçitavanje...' : 'Po≈°alji fajl'}[m
[32m+[m				[32m</button>[m
[32m+[m			[32m</div>[m
[32m+[m			[32m{message && <p>{message}</p>}[m
[32m+[m		[32m</div>[m
[32m+[m	[32m);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default CategoriesAutoInput;[m
[1mdiff --git a/app/ulaganje/investitori/investorsData.ts b/app/ulaganje/investitori/investorsData.ts[m
[1mindex 4fac70e..931034a 100644[m
[1m--- a/app/ulaganje/investitori/investorsData.ts[m
[1m+++ b/app/ulaganje/investitori/investorsData.ts[m
[36m@@ -87,8 +87,8 @@[m [mexport const contentData: BasicInformation[] = [[m
 		id: 'IN-007',[m
 		name: 'Neboj≈°a Lukiƒá',[m
 		email: 'nebojsa.3011992@gmail.com',[m
[31m-		amount: '1.714,40',[m
[31m-		share: '3,43',[m
[32m+[m		[32mamount: '1.789,40',[m
[32m+[m		[32mshare: '3,58',[m
 	},[m
 	{[m
 		id: 'IN-008',[m
[36m@@ -131,6 +131,12 @@[m [mexport const contentData: BasicInformation[] = [[m
 		amount: '10,00',[m
 		share: '0,02',[m
 	},[m
[32m+[m	[32m{[m
[32m+[m		[32mid: 'IN-015',[m
[32m+[m		[32mname: 'Akeksa ƒÜorkoviƒá',[m
[32m+[m		[32mamount: '10,00',[m
[32m+[m		[32mshare: '0,02',[m
[32m+[m	[32m},[m
 	{[m
 		id: 'IN-016',[m
 		name: 'Dra≈æen Bediƒá',[m
[36m@@ -152,7 +158,7 @@[m [mexport const contentData: BasicInformation[] = [[m
 	{[m
 		id: 'IN-019',[m
 		name: 'Roland Janda',[m
[31m-		share: '1,01',[m
[32m+[m		[32mshare: '2,01',[m
 	},[m
 	{[m
 		id: 'IN-020',[m
[36m@@ -240,6 +246,7 @@[m [mexport const invested: InvestedData = {[m
 	'IN-007': [[m
 		{ date: '11.10.2024.', amount: '1.709,40', share: '3,42%' },[m
 		{ date: '08.11.2024.', amount: '5,00', share: '0,01%' },[m
[32m+[m		[32m{ date: '19.11.2024.', amount: '75,00', share: '0,15%' },[m
 	],[m
 	'IN-008': [{ date: '11.10.2024.', amount: '10,00', share: '0,02%' }],[m
 	'IN-009': [{ date: '14.10.2024.', amount: '50,00', share: '0,10%' }],[m
[36m@@ -254,6 +261,7 @@[m [mexport const invested: InvestedData = {[m
 		{ date: '08.11.2024.', amount: '5,00', share: '0,01%' },[m
 	],[m
 	'IN-013': [{ date: '21.10.2024.', amount: '10,00', share: '0,02%' }],[m
[32m+[m	[32m'IN-015': [{ date: '20.11.2024.', amount: '10,00', share: '0,02%' }],[m
 	'IN-016': [{ date: '22.10.2024.', amount: '50,00', share: '0,10%' }],[m
 	'IN-017': [{ date: '28.10.2024.', amount: '20,00', share: '0,04%' }],[m
 	'IN-018': [{ date: '28.10.2024.', amount: '17,09', share: '0,03%' }],[m
[36m@@ -325,6 +333,10 @@[m [mexport const withdrawn: WithdrawnData = {[m
 		amount: '0,00',[m
 		share: '0,00',[m
 	},[m
[32m+[m	[32m'IN-015': {[m
[32m+[m		[32mamount: '0,00',[m
[32m+[m		[32mshare: '0,00',[m
[32m+[m	[32m},[m
 	'IN-016': {[m
 		amount: '0,00',[m
 		share: '0,00',[m
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex 5a1ea7a..6ba03db 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -52,7 +52,8 @@[m
 				"react-select": "^5.8.0",[m
 				"react-world-flags": "^1.6.0",[m
 				"sharp": "^0.33.5",[m
[31m-				"uuid": "^10.0.0"[m
[32m+[m				[32m"uuid": "^10.0.0",[m
[32m+[m				[32m"xlsx": "^0.18.5"[m
 			},[m
 			"devDependencies": {[m
 				"@next/bundle-analyzer": "^14.2.6",[m
[36m@@ -60,11 +61,12 @@[m
 				"@types/date-fns": "^2.5.3",[m
 				"@types/lodash.debounce": "^4.0.9",[m
 				"@types/lodash.throttle": "^4.1.9",[m
[31m-				"@types/node": "^22.9.0",[m
[32m+[m				[32m"@types/node": "^22.9.3",[m
 				"@types/react": "^18",[m
 				"@types/react-dom": "^18",[m
 				"@types/react-modal": "^3.16.3",[m
 				"@types/uuid": "^10.0.0",[m
[32m+[m				[32m"@types/xlsx": "^0.0.35",[m
 				"@typescript-eslint/eslint-plugin": "^5.10.0",[m
 				"@typescript-eslint/parser": "^5.10.0",[m
 				"eslint": "^8.33.0",[m
[36m@@ -74,7 +76,7 @@[m
 				"prisma": "^5.21.1",[m
 				"tailwindcss": "^3.4.10",[m
 				"ts-node": "^10.9.2",[m
[31m-				"typescript": "^5.6.3"[m
[32m+[m				[32m"typescript": "^5.7.2"[m
 			}[m
 		},[m
 		"node_modules/@alloc/quick-lru": {[m
[36m@@ -3557,9 +3559,9 @@[m
 			}[m
 		},[m
 		"node_modules/@types/node": {[m
[31m-			"version": "22.9.0",[m
[31m-			"resolved": "https://registry.npmjs.org/@types/node/-/node-22.9.0.tgz",[m
[31m-			"integrity": "sha512-vuyHg81vvWA1Z1ELfvLko2c8f34gyA0zaic0+Rllc5lbCnbSyuvb2Oxpm6TAUAC/2xZN3QGqxBNggD1nNR2AfQ==",[m
[32m+[m			[32m"version": "22.9.3",[m
[32m+[m			[32m"resolved": "https://registry.npmjs.org/@types/node/-/node-22.9.3.tgz",[m
[32m+[m			[32m"integrity": "sha512-F3u1fs/fce3FFk+DAxbxc78DF8x0cY09RRL8GnXLmkJ1jvx3TtPdWoTT5/NiYfI5ASqXBmfqJi9dZ3gxMx4lzw==",[m
 			"dev": true,[m
 			"license": "MIT",[m
 			"dependencies": {[m
[36m@@ -3637,6 +3639,13 @@[m
 			"dev": true,[m
 			"license": "MIT"[m
 		},[m
[32m+[m		[32m"node_modules/@types/xlsx": {[m
[32m+[m			[32m"version": "0.0.35",[m
[32m+[m			[32m"resolved": "https://registry.npmjs.org/@types/xlsx/-/xlsx-0.0.35.tgz",[m
[32m+[m			[32m"integrity": "sha512-s0x3DYHZzOkxtjqOk/Nv1ezGzpbN7I8WX+lzlV/nFfTDOv7x4d8ZwGHcnaiB8UCx89omPsftQhS5II3jeWePxQ==",[m
[32m+[m